name: Crowdin Download Action

permissions:
  contents: write
  pull-requests: write

on:
  workflow_dispatch:
    inputs:
      localization_branch_name:
        description: 'The branch to create for the translations PR.'
        required: true
        default: 'crowdin/translations'
      pull_request_base_branch:
        description: 'The base branch for the pull request.'
        required: true
        default: 'dev'

jobs:
  crowdin:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout the BASE branch first. The PR branch will be created later.
      # This step will fail if the base branch does not exist, providing the necessary validation.
      - name: Checkout Base Branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.pull_request_base_branch }}

      - name: Configure Git User
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Synchronize with Crowdin (Download Only)
        uses: crowdin/github-action@v2
        with:
          upload_sources: false
          upload_translations: false
          download_translations: true
          # Disable automatic PR creation by Crowdin action, we do it manually
          create_pull_request: false
          # We are on the base branch, but we tell the action what the new branch will be.
          # Note: The action itself may not use this if not creating a PR, but it's good for clarity.
          localization_branch_name: ${{ github.event.inputs.localization_branch_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CROWDIN_PROJECT_ID: ${{ secrets.CROWDIN_PROJECT_ID }}
          CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_PERSONAL_TOKEN }}

      - name: Prepare for Pull Request Creation
        run: |
          # Check if there is at least one commit to reset from.
          if git rev-parse HEAD~1 >/dev/null 2>&1; then
            echo "Resetting previous commit (if any) to prepare for PR creation..."
            git reset --soft HEAD~1
          else
            echo "No prior commit to reset. Proceeding."
          fi
          git add -A
          git status --porcelain -unormal -- # For debugging, shows what's staged/unstaged

      - name: Rename JSON Files to Lowercase
        env:
          TARGET_DIR: "common/src/main/resources/assets/directionhud/lang/"
        run: |
          echo "Starting renaming process for JSON files within $TARGET_DIR..."
          if [ ! -d "$TARGET_DIR" ]; then
            echo "Warning: Target directory '$TARGET_DIR' does not exist. Skipping rename."
            exit 0
          fi

          find "$TARGET_DIR" -type f -name '*[A-Z]*.json' | while IFS= read -r file; do
            original_path="$file"
            dir_name=$(dirname "$original_path")
            base_name=$(basename "$original_path")
          
            new_base_name=$(echo "$base_name" | tr '[:upper:]' '[:lower:]')
            new_path="$dir_name/$new_base_name"

            if [ "$original_path" != "$new_path" ]; then
              if [ -e "$new_path" ] && [ ! "$(readlink -f "$original_path")" = "$(readlink -f "$new_path")" ]; then
                echo "::warning file=$original_path::Cannot rename '$original_path' to '$new_path' because it already exists. Skipping."
              else
                # Use git mv instead of mv to properly track renames in Git
                git mv "$original_path" "$new_path"
              fi
            fi
          done

          echo "JSON file renaming complete."

      # 2. Use the 'create-pull-request' action to handle commits and PR creation.
      # This is cleaner than managing commits manually.
      - name: Create Pull Request with Translation Changes
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # The action will collect all changes, create a commit, and then the PR.
          commit-message: 'Update translations from Crowdin'
          # This is the new branch that will be created by the action.
          branch: ${{ github.event.inputs.localization_branch_name }}
          base: ${{ github.event.inputs.pull_request_base_branch }}
          delete-branch: true
          title: 'Update Crowdin Translations'
          body: |
            This PR contains the latest translations from Crowdin.
            
            **Changes:**
            - Fetched new translations.
            - Renamed JSON translation files to lowercase for consistency.