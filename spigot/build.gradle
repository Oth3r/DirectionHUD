plugins {
    id 'base'
    id 'java'
    id "me.modmuss50.mod-publish-plugin" version "0.8.4"
}

base {
    archivesName = project.file_name_spigot
}
version = project.spigot_version
group = project.maven_group

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "geyser"
        url = uri("https://repo.opencollab.dev/main/")
    }
}
sourceSets {
    main {
        java.srcDirs = ['src/main/java', '../common/src/main/java']
        resources.srcDirs = ['src/main/resources', '../common/src/main/resources']
    }
}
dependencies {
    implementation 'org.apache.commons:commons-configuration2:2.11.0'
    compileOnly ("org.spigotmc:spigot-api:${project.minecraft_version}-R0.1-SNAPSHOT")
    compileOnly ('org.geysermc.floodgate:api:2.2.2-SNAPSHOT')
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset = 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

//build in testing server dir
tasks.register('buildAndMoveJar', Jar) {
    archiveBaseName.set("directionhud-spigot-dev")
    version = "0"
    from(sourceSets.main.output)

    destinationDirectory.set(file("/mnt/1TBM2/Minecraft/Servers/Spigot/Latest/plugins"))
//    destinationDirectory.set(file("R:/Minecraft/Servers/Spigot/Latest/plugins"))
}

publishMods {
    changelog = file('../changelog.md').text
    type = STABLE

    file = jar.archiveFile
    modLoaders.add("spigot")

    version = spigot_version
    displayName = "v${spigot_version} [Spigot]"

    modrinth {
        accessToken = env.fetchOrNull('MODRINTH')
        projectId = "H8WCXRtb"
        minecraftVersions.addAll(spigot_versions.split(",").toList())

        requires("fabric-api")

        announcementTitle = "Download from Modrinth"
    }
}